
    //chessboard vert lines
    //Board_->addLine(-280,355,-280,-355);
    /*
    Board_->addRect(80,0,80,80);
    */

    //Add Text
    //QString textA = "A";
    //Board_->addText(textA);
    //dark_cell
    //light_cell
    //QPainterPath path;
    //path.addRect(0, 0, 70, 70);
    //QBrush b = painter->brush();
    //painter->setBrush(QBrush(color_));

    //painter->drawRect(QRect(this->x_, this->y_, this->width_, this->width_));
    //painter->setBrush(b);

    //QPainterPath path;
    //path.addRect(0, 0, 70, 80);
    //QPainter painter(this);
    //painter.fillRect(0, 0, 100, 100, Qt::yellow);
    //painter.setPen(QPen(QColor(240, 218, 181), 1, Qt::SolidLine,
    //                   Qt::FlatCap, Qt::MiterJoin));
    //painter.setBrush(QColor(181, 135, 99));
    //Board_->addItem();
    //painter.drawPath(path);


/*
    machine = new QStateMachine(this);
    s1 = new QState();
    s1->assignProperty(ui->labelTurnsTakenP2, "text","Current State: 1");
    s1->assignProperty(ui->pushButtonTurnsP2, "geometry",QRect(50,100,10,50));
    s1 = new QState();
    s1->assignProperty(ui->labelTurnsTakenP2, "text","Current State: 2");
    s1->assignProperty(ui->pushButtonTurnsP2, "geometry",QRect(200,500,140,100));
    animationState = new QPropertyAnimation(ui->pushButtonTurnsP2, "geometry");
    animationState->setEasingCurve(QEasingCurve::OutBounce);
    QEventTransition *t1 = new QEventTransition(ui->pushButtonTurnsP1, QEvent::MouseButtonPress );
    t1->setTargetState(s2);
    t1->addAnimation(animationState);
    s1->addTransition(t1);
    QEventTransition *t2 = new QEventTransition(ui->pushButtonTurnsP1, QEvent::MouseButtonPress );
    t2->setTargetState(s1);
    t2->addAnimation(animationState);
    s2->addTransition(t2);

    machine->addState(s1);
    machine->addState(s2);
    machine->setInitialState(s1);
    machine->start();
    */
//connect(ui->horizontalSlider, SIGNAL(valueChanged(int)),
    //        ui->progressBarP1, SLOT(setValue(int)));

  /*
    animation4 = new QPropertyAnimation(ui->labelP2TimeLeft, "geometry");
    animation4->setDuration(3000);
    animation4->setStartValue(QRect(575,400,115,24));
    animation4->setEndValue(ui->labelP2TimeLeft->geometry());

    animation5 = new QPropertyAnimation(ui->labelP1TimeLeft, "geometry");
    animation5->setDuration(3000);
    animation5->setStartValue(QRect(575,800,115,24));
    animation5->setEndValue(ui->labelP1TimeLeft->geometry());(QRect(575,800,115,24));

    animation6 = new QPropertyAnimation(ui->lcdP2, "geometry");
    animation6->setDuration(3000);
    animation6->setStartValue(QRect(575,500,115,24));
    animation6->setEndValue(ui->lcdP2->geometry());

    animation7 = new QPropertyAnimation(ui->lcdP1, "geometry");
    animation7->setDuration(3000);
    animation7->setStartValue(QRect(575,900,115,24));
    animation7->setEndValue(ui->lcdP1->geometry());

    animationGroup1 = new QSequentialAnimationGroup;
    animationGroup1->addAnimation(animation4);
    animationGroup1->addAnimation(animation5);
    animationGroup1->addAnimation(animation6);
    animationGroup1->addAnimation(animation7);
    animationGroup1->start();
    */

 /*
    grid_view->setSceneRect(0,0,grid_view->frameSize().width(),grid_view->frameSize().height());
    cell_height_ = grid_view->frameSize().height();
    cell_width_ = grid_view->frameSize().width(); //no matter the number there is still a weird edge
    */


/*
    QPainter mytext(this);
    mytext.setFont(QFont("Times",16,QFont::Bold));
    mytext.drawText(QPoint(20,30),"QT5 Text");

    QTextDocument document;
    QRect rect(0,0,250,250);
    mytext.translate(100,50);

    document.setHtml("<b>Hello</b><font color = 'red size = '30'> QT5 C++</font>");
    document.drawContents(&mytext, rect);
    */

    /*
    QPainter myline(this);
    QPen linePen(Qt::green);
    linePen.setWidth(10);
    myline.setPen(linePen);
    myline.drawLine(100,0,100,1000);


    QPainter ellipsePainter(this);
    QPen pen1;
    pen1.setWidth(8);
    //pen1.setBrush(Qt::SolidPattern);
    //pen1.setBrush(Qt::BDiagPattern);
    pen1.setBrush(Qt::Dense5Pattern);
    ellipsePainter.setPen(pen1);
    ellipsePainter.drawEllipse(QRect(200,200,250,250));

    QPainter painter(this);
    painter.setBrush(Qt::Dense7Pattern);
    QPen pen;
    pen.setColor(Qt::green);
    pen.setWidth(5);
    painter.setPen(pen);
    //painter.drawRect(QRect(80,120,200,100));
    //scene->addEllipse(10,10,100,100,pen1,redBrush);
    
    QGraphicsTextItem *textA = scene->addText("A");
    textA->setPos(-240, 320);
    QGraphicsTextItem *textB = scene->addText("B");
    textA->setPos(-160, 320);

    QGraphicsTextItem *textC = scene->addText("C");
    textA->setPos(-80, 320);
    QGraphicsTextItem *textD = scene->addText("D");
    textA->setPos(0, 320);
    QGraphicsTextItem *textE = scene->addText("E");
    textA->setPos(80, 320);
    QGraphicsTextItem *textF = scene->addText("F");
    textA->setPos(160, 320);
    QGraphicsTextItem *textG = scene->addText("G");
    textA->setPos(240, 320);
    QGraphicsTextItem *textH = scene->addText("H");
    textA->setPos(320, 320);
    */

mainwindow.h:
 /*
    // P1time/P2time sequential animation group
    QPropertyAnimation *animation4;
    QPropertyAnimation *animation5;
    QPropertyAnimation *animation6;
    QPropertyAnimation *animation7;
    QSequentialAnimationGroup *animationGroup1;
    */
    /*
    //state machine
    QStateMachine *machine;
    QState *s1;
    QState *s2;
    QPropertyAnimation *animationState;
    QEventTransition *t1;
    QEventTransition *t2;
    */